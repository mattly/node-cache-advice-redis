// Generated by CoffeeScript 1.6.1
(function() {

  module.exports = function(config) {
    var cache, namespace;
    if (!config.redis) {
      (function() {
        var auth, hostname, password, port, _ref;
        if (config.url) {
          _ref = require('url').parse(config.url), hostname = _ref.hostname, port = _ref.port, auth = _ref.auth;
        } else {
          hostname = config.hostname, port = config.port, auth = config.auth;
        }
        hostname || (hostname = 'localhost');
        port || (port = 6379);
        config.redis = require('redis').createClient(port, hostname);
        if (auth) {
          password = auth.split(':')[1];
          return config.redis.auth(password);
        }
      })();
    }
    cache = {
      redis: config.redis,
      namespace: config.namespace,
      expire: config.expire
    };
    namespace = function(key) {
      if (cache.namespace) {
        return "" + cache.namespace + ":" + key;
      } else {
        return key;
      }
    };
    cache.set = function(key, data, callback) {
      key = namespace(key);
      data = JSON.stringify(data);
      if (cache.expire) {
        return cache.redis.setex(key, cache.expire, data, callback);
      } else {
        return cache.redis.set(key, data, callback);
      }
    };
    cache.get = function(key, callback) {
      key = namespace(key);
      return cache.redis.get(key, function(err, result) {
        if (err) {
          return callback(err);
        }
        try {
          return callback(err, JSON.parse(result));
        } catch (e) {
          return callback(e);
        }
      });
    };
    cache.del = function(key, callback) {
      key = namespace(key);
      return cache.redis.del(key, callback);
    };
    return cache;
  };

}).call(this);
